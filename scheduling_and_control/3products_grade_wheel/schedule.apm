Constants
  n = 3  ! products
  
Connections
  p(end).n(end).x = FIXED
  p(end).n(end).x = 4.5

  p(71).n(2).iprod[1] = FIXED
  p(71).n(2).iprod[1] = 2.0 ! set in csv file
  
  p(51).n(2).iprod[2] = FIXED
  p(51).n(2).iprod[2] = 5.0 ! set in csv file
  
Parameters
  ! transition points for steps
  b[1] = 0
  b[2] = 1
  b[3] = 2
  b[4] = 3
  b[5] = 4
  b[6] = 5
  ! step up (+) or down (-)
  sg[1] = 1
  sg[2] = -1
  sg[3] = 1
  sg[4] = -1
  sg[5] = 1
  sg[6] = -1
  ! magnitude of step function
  m[1] = 1
  m[2] = 1
  m[3] = 2
  m[4] = 2
  m[5] = 3
  m[6] = 3
  ! demand for each product
  d[1] = 0
  d[2] = 2
  d[3] = 3
  ! flowrate
  q = 2
  ! manipulated variable
  u = 4.5 >= 0.0  <= 8.0
  ! zero everywhere except last point
  last = 0

  ! delivery of product
  delivery[1:n] = 0
  dt = 0.1
  
Variables
  x = 4.5
  ! individual step functions
  w[1:2*n] >= 0 , <= 1
  ! slack variables
  ! should be positive when x - b is negative
  s1[1:2*n] >= 0 , <= 1000
  ! should be positive when x - b is positive
  s2[1:2*n] >= 0 , <= 1000
  ! profit function
  pfcn = 3  >= 0  <= 3
  ! total profit at each time step
  profit
  ! which is product is being produced
  prod[1:n] = 0
  ! integral of product
  iprod[1:n] = 0 >= 0
  
Intermediates
  ! sum steps
  z[0] = 0
  z[1:2*n] = z[0:2*n-1] + sg[1:2*n] * m[1:2*n] * w[1:2*n]
  
Equations
  pfcn = z[2*n]
  profit = pfcn * q
  $x = -x + u
  prod[1] = w[1] - w[2]
  prod[2] = w[3] - w[4]
  prod[3] = w[5] - w[6]  
  $iprod[1:n] = prod[1:n] * q - delivery[1:n] / dt
  x - b[1:2*n] =  s2[1:2*n] - s1[1:2*n]
  last * (iprod[1:n] - d[1:n]) >= 0
  ! include as alternative to objective version
  !s1[1:2*n]*(w[1:2*n]) <= 0
  !s2[1:2*n]*(1-w[1:2*n]) <= 0    
  minimize 10000 * s1[1:2*n]*(w[1:2*n])
  minimize 10000 * s2[1:2*n]*(1-w[1:2*n])
  maximize profit